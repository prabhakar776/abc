/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * The contents of this file are subject to the terms of the Liferay Enterprise
 * Subscription License ("License"). You may not use this file except in
 * compliance with the License. You can obtain a copy of the License by
 * contacting Liferay, Inc. See the License for the specific language governing
 * permissions and limitations under the License, including but not limited to
 * distribution rights of the Software.
 *
 *
 *
 */

package com.instructure.canvas.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

import java.util.Date;

/**
 * The base model interface for the UserAward service. Represents a row in the &quot;CANVAS_UserAward&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link com.instructure.canvas.model.impl.UserAwardModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link com.instructure.canvas.model.impl.UserAwardImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see UserAward
 * @see com.instructure.canvas.model.impl.UserAwardImpl
 * @see com.instructure.canvas.model.impl.UserAwardModelImpl
 * @generated
 */
public interface UserAwardModel extends BaseModel<UserAward> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a user award model instance should use the {@link UserAward} interface instead.
	 */

	/**
	 * Returns the primary key of this user award.
	 *
	 * @return the primary key of this user award
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this user award.
	 *
	 * @param primaryKey the primary key of this user award
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the ID of this user award.
	 *
	 * @return the ID of this user award
	 */
	public long getId();

	/**
	 * Sets the ID of this user award.
	 *
	 * @param id the ID of this user award
	 */
	public void setId(long id);

	/**
	 * Returns the canvas user ID of this user award.
	 *
	 * @return the canvas user ID of this user award
	 */
	public long getCanvasUserId();

	/**
	 * Sets the canvas user ID of this user award.
	 *
	 * @param canvasUserId the canvas user ID of this user award
	 */
	public void setCanvasUserId(long canvasUserId);

	/**
	 * Returns the canvas user uuid of this user award.
	 *
	 * @return the canvas user uuid of this user award
	 * @throws SystemException if a system exception occurred
	 */
	public String getCanvasUserUuid() throws SystemException;

	/**
	 * Sets the canvas user uuid of this user award.
	 *
	 * @param canvasUserUuid the canvas user uuid of this user award
	 */
	public void setCanvasUserUuid(String canvasUserUuid);

	/**
	 * Returns the course ID of this user award.
	 *
	 * @return the course ID of this user award
	 */
	public long getCourseId();

	/**
	 * Sets the course ID of this user award.
	 *
	 * @param courseId the course ID of this user award
	 */
	public void setCourseId(long courseId);

	/**
	 * Returns the external ID of this user award.
	 *
	 * @return the external ID of this user award
	 */
	public long getExternalId();

	/**
	 * Sets the external ID of this user award.
	 *
	 * @param externalId the external ID of this user award
	 */
	public void setExternalId(long externalId);

	/**
	 * Returns the cert ID of this user award.
	 *
	 * @return the cert ID of this user award
	 */
	@AutoEscape
	public String getCertId();

	/**
	 * Sets the cert ID of this user award.
	 *
	 * @param certId the cert ID of this user award
	 */
	public void setCertId(String certId);

	/**
	 * Returns the letter of this user award.
	 *
	 * @return the letter of this user award
	 */
	public boolean getLetter();

	/**
	 * Returns <code>true</code> if this user award is letter.
	 *
	 * @return <code>true</code> if this user award is letter; <code>false</code> otherwise
	 */
	public boolean isLetter();

	/**
	 * Sets whether this user award is letter.
	 *
	 * @param letter the letter of this user award
	 */
	public void setLetter(boolean letter);

	/**
	 * Returns the create date of this user award.
	 *
	 * @return the create date of this user award
	 */
	public Date getCreateDate();

	/**
	 * Sets the create date of this user award.
	 *
	 * @param createDate the create date of this user award
	 */
	public void setCreateDate(Date createDate);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(UserAward userAward);

	@Override
	public int hashCode();

	@Override
	public CacheModel<UserAward> toCacheModel();

	@Override
	public UserAward toEscapedModel();

	@Override
	public UserAward toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}