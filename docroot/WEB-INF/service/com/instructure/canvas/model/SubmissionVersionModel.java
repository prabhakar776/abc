/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * The contents of this file are subject to the terms of the Liferay Enterprise
 * Subscription License ("License"). You may not use this file except in
 * compliance with the License. You can obtain a copy of the License by
 * contacting Liferay, Inc. See the License for the specific language governing
 * permissions and limitations under the License, including but not limited to
 * distribution rights of the Software.
 *
 *
 *
 */

package com.instructure.canvas.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

/**
 * The base model interface for the SubmissionVersion service. Represents a row in the &quot;CANVAS_SubmissionVersion&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link com.instructure.canvas.model.impl.SubmissionVersionModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link com.instructure.canvas.model.impl.SubmissionVersionImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see SubmissionVersion
 * @see com.instructure.canvas.model.impl.SubmissionVersionImpl
 * @see com.instructure.canvas.model.impl.SubmissionVersionModelImpl
 * @generated
 */
public interface SubmissionVersionModel extends BaseModel<SubmissionVersion> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a submission version model instance should use the {@link SubmissionVersion} interface instead.
	 */

	/**
	 * Returns the primary key of this submission version.
	 *
	 * @return the primary key of this submission version
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this submission version.
	 *
	 * @param primaryKey the primary key of this submission version
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the submission ID of this submission version.
	 *
	 * @return the submission ID of this submission version
	 */
	public long getSubmissionId();

	/**
	 * Sets the submission ID of this submission version.
	 *
	 * @param submissionId the submission ID of this submission version
	 */
	public void setSubmissionId(long submissionId);

	/**
	 * Returns the assignment ID of this submission version.
	 *
	 * @return the assignment ID of this submission version
	 */
	public long getAssignmentId();

	/**
	 * Sets the assignment ID of this submission version.
	 *
	 * @param assignmentId the assignment ID of this submission version
	 */
	public void setAssignmentId(long assignmentId);

	/**
	 * Returns the assignment name of this submission version.
	 *
	 * @return the assignment name of this submission version
	 */
	@AutoEscape
	public String getAssignmentName();

	/**
	 * Sets the assignment name of this submission version.
	 *
	 * @param assignmentName the assignment name of this submission version
	 */
	public void setAssignmentName(String assignmentName);

	/**
	 * Returns the attempt of this submission version.
	 *
	 * @return the attempt of this submission version
	 */
	public int getAttempt();

	/**
	 * Sets the attempt of this submission version.
	 *
	 * @param attempt the attempt of this submission version
	 */
	public void setAttempt(int attempt);

	/**
	 * Returns the body of this submission version.
	 *
	 * @return the body of this submission version
	 */
	@AutoEscape
	public String getBody();

	/**
	 * Sets the body of this submission version.
	 *
	 * @param body the body of this submission version
	 */
	public void setBody(String body);

	/**
	 * Returns the current grade of this submission version.
	 *
	 * @return the current grade of this submission version
	 */
	@AutoEscape
	public String getCurrentGrade();

	/**
	 * Sets the current grade of this submission version.
	 *
	 * @param currentGrade the current grade of this submission version
	 */
	public void setCurrentGrade(String currentGrade);

	/**
	 * Returns the current graded at of this submission version.
	 *
	 * @return the current graded at of this submission version
	 */
	@AutoEscape
	public String getCurrentGradedAt();

	/**
	 * Sets the current graded at of this submission version.
	 *
	 * @param currentGradedAt the current graded at of this submission version
	 */
	public void setCurrentGradedAt(String currentGradedAt);

	/**
	 * Returns the current grader of this submission version.
	 *
	 * @return the current grader of this submission version
	 */
	@AutoEscape
	public String getCurrentGrader();

	/**
	 * Sets the current grader of this submission version.
	 *
	 * @param currentGrader the current grader of this submission version
	 */
	public void setCurrentGrader(String currentGrader);

	/**
	 * Returns the grade matches current submission of this submission version.
	 *
	 * @return the grade matches current submission of this submission version
	 */
	@AutoEscape
	public String getGradeMatchesCurrentSubmission();

	/**
	 * Sets the grade matches current submission of this submission version.
	 *
	 * @param gradeMatchesCurrentSubmission the grade matches current submission of this submission version
	 */
	public void setGradeMatchesCurrentSubmission(
		String gradeMatchesCurrentSubmission);

	/**
	 * Returns the graded at of this submission version.
	 *
	 * @return the graded at of this submission version
	 */
	@AutoEscape
	public String getGradedAt();

	/**
	 * Sets the graded at of this submission version.
	 *
	 * @param gradedAt the graded at of this submission version
	 */
	public void setGradedAt(String gradedAt);

	/**
	 * Returns the grader of this submission version.
	 *
	 * @return the grader of this submission version
	 */
	@AutoEscape
	public String getGrader();

	/**
	 * Sets the grader of this submission version.
	 *
	 * @param grader the grader of this submission version
	 */
	public void setGrader(String grader);

	/**
	 * Returns the grader ID of this submission version.
	 *
	 * @return the grader ID of this submission version
	 */
	public long getGraderId();

	/**
	 * Sets the grader ID of this submission version.
	 *
	 * @param graderId the grader ID of this submission version
	 */
	public void setGraderId(long graderId);

	/**
	 * Returns the new grade of this submission version.
	 *
	 * @return the new grade of this submission version
	 */
	@AutoEscape
	public String getNewGrade();

	/**
	 * Sets the new grade of this submission version.
	 *
	 * @param newGrade the new grade of this submission version
	 */
	public void setNewGrade(String newGrade);

	/**
	 * Returns the new graded at of this submission version.
	 *
	 * @return the new graded at of this submission version
	 */
	@AutoEscape
	public String getNewGradedAt();

	/**
	 * Sets the new graded at of this submission version.
	 *
	 * @param newGradedAt the new graded at of this submission version
	 */
	public void setNewGradedAt(String newGradedAt);

	/**
	 * Returns the new grader of this submission version.
	 *
	 * @return the new grader of this submission version
	 */
	@AutoEscape
	public String getNewGrader();

	/**
	 * Sets the new grader of this submission version.
	 *
	 * @param newGrader the new grader of this submission version
	 */
	public void setNewGrader(String newGrader);

	/**
	 * Returns the previous grade of this submission version.
	 *
	 * @return the previous grade of this submission version
	 */
	@AutoEscape
	public String getPreviousGrade();

	/**
	 * Sets the previous grade of this submission version.
	 *
	 * @param previousGrade the previous grade of this submission version
	 */
	public void setPreviousGrade(String previousGrade);

	/**
	 * Returns the previous graded at of this submission version.
	 *
	 * @return the previous graded at of this submission version
	 */
	@AutoEscape
	public String getPreviousGradedAt();

	/**
	 * Sets the previous graded at of this submission version.
	 *
	 * @param previousGradedAt the previous graded at of this submission version
	 */
	public void setPreviousGradedAt(String previousGradedAt);

	/**
	 * Returns the previous grader of this submission version.
	 *
	 * @return the previous grader of this submission version
	 */
	@AutoEscape
	public String getPreviousGrader();

	/**
	 * Sets the previous grader of this submission version.
	 *
	 * @param previousGrader the previous grader of this submission version
	 */
	public void setPreviousGrader(String previousGrader);

	/**
	 * Returns the score of this submission version.
	 *
	 * @return the score of this submission version
	 */
	public long getScore();

	/**
	 * Sets the score of this submission version.
	 *
	 * @param score the score of this submission version
	 */
	public void setScore(long score);

	/**
	 * Returns the user name of this submission version.
	 *
	 * @return the user name of this submission version
	 */
	@AutoEscape
	public String getUserName();

	/**
	 * Sets the user name of this submission version.
	 *
	 * @param userName the user name of this submission version
	 */
	public void setUserName(String userName);

	/**
	 * Returns the user ID of this submission version.
	 *
	 * @return the user ID of this submission version
	 */
	public long getUserId();

	/**
	 * Sets the user ID of this submission version.
	 *
	 * @param userId the user ID of this submission version
	 */
	public void setUserId(long userId);

	/**
	 * Returns the user uuid of this submission version.
	 *
	 * @return the user uuid of this submission version
	 * @throws SystemException if a system exception occurred
	 */
	public String getUserUuid() throws SystemException;

	/**
	 * Sets the user uuid of this submission version.
	 *
	 * @param userUuid the user uuid of this submission version
	 */
	public void setUserUuid(String userUuid);

	/**
	 * Returns the submission type of this submission version.
	 *
	 * @return the submission type of this submission version
	 */
	@AutoEscape
	public String getSubmissionType();

	/**
	 * Sets the submission type of this submission version.
	 *
	 * @param submissionType the submission type of this submission version
	 */
	public void setSubmissionType(String submissionType);

	/**
	 * Returns the url of this submission version.
	 *
	 * @return the url of this submission version
	 */
	@AutoEscape
	public String getUrl();

	/**
	 * Sets the url of this submission version.
	 *
	 * @param url the url of this submission version
	 */
	public void setUrl(String url);

	/**
	 * Returns the workflow state of this submission version.
	 *
	 * @return the workflow state of this submission version
	 */
	@AutoEscape
	public String getWorkflowState();

	/**
	 * Sets the workflow state of this submission version.
	 *
	 * @param workflowState the workflow state of this submission version
	 */
	public void setWorkflowState(String workflowState);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(SubmissionVersion submissionVersion);

	@Override
	public int hashCode();

	@Override
	public CacheModel<SubmissionVersion> toCacheModel();

	@Override
	public SubmissionVersion toEscapedModel();

	@Override
	public SubmissionVersion toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}