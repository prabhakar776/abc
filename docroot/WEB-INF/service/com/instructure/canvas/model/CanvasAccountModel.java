/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * The contents of this file are subject to the terms of the Liferay Enterprise
 * Subscription License ("License"). You may not use this file except in
 * compliance with the License. You can obtain a copy of the License by
 * contacting Liferay, Inc. See the License for the specific language governing
 * permissions and limitations under the License, including but not limited to
 * distribution rights of the Software.
 *
 *
 *
 */

package com.instructure.canvas.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

/**
 * The base model interface for the CanvasAccount service. Represents a row in the &quot;CANVAS_CanvasAccount&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link com.instructure.canvas.model.impl.CanvasAccountModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link com.instructure.canvas.model.impl.CanvasAccountImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see CanvasAccount
 * @see com.instructure.canvas.model.impl.CanvasAccountImpl
 * @see com.instructure.canvas.model.impl.CanvasAccountModelImpl
 * @generated
 */
public interface CanvasAccountModel extends BaseModel<CanvasAccount> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a canvas account model instance should use the {@link CanvasAccount} interface instead.
	 */

	/**
	 * Returns the primary key of this canvas account.
	 *
	 * @return the primary key of this canvas account
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this canvas account.
	 *
	 * @param primaryKey the primary key of this canvas account
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the account ID of this canvas account.
	 *
	 * @return the account ID of this canvas account
	 */
	public long getAccountId();

	/**
	 * Sets the account ID of this canvas account.
	 *
	 * @param accountId the account ID of this canvas account
	 */
	public void setAccountId(long accountId);

	/**
	 * Returns the ID of this canvas account.
	 *
	 * @return the ID of this canvas account
	 */
	@AutoEscape
	public String getId();

	/**
	 * Sets the ID of this canvas account.
	 *
	 * @param id the ID of this canvas account
	 */
	public void setId(String id);

	/**
	 * Returns the parent account ID of this canvas account.
	 *
	 * @return the parent account ID of this canvas account
	 */
	@AutoEscape
	public String getParentAccountId();

	/**
	 * Sets the parent account ID of this canvas account.
	 *
	 * @param parentAccountId the parent account ID of this canvas account
	 */
	public void setParentAccountId(String parentAccountId);

	/**
	 * Returns the name of this canvas account.
	 *
	 * @return the name of this canvas account
	 */
	@AutoEscape
	public String getName();

	/**
	 * Sets the name of this canvas account.
	 *
	 * @param name the name of this canvas account
	 */
	public void setName(String name);

	/**
	 * Returns the root account ID of this canvas account.
	 *
	 * @return the root account ID of this canvas account
	 */
	@AutoEscape
	public String getRootAccountId();

	/**
	 * Sets the root account ID of this canvas account.
	 *
	 * @param rootAccountId the root account ID of this canvas account
	 */
	public void setRootAccountId(String rootAccountId);

	/**
	 * Returns the s i s account ID of this canvas account.
	 *
	 * @return the s i s account ID of this canvas account
	 */
	@AutoEscape
	public String getSISAccountId();

	/**
	 * Sets the s i s account ID of this canvas account.
	 *
	 * @param SISAccountId the s i s account ID of this canvas account
	 */
	public void setSISAccountId(String SISAccountId);

	/**
	 * Returns the status of this canvas account.
	 *
	 * @return the status of this canvas account
	 */
	public long getStatus();

	/**
	 * Sets the status of this canvas account.
	 *
	 * @param status the status of this canvas account
	 */
	public void setStatus(long status);

	/**
	 * Returns the time zone of this canvas account.
	 *
	 * @return the time zone of this canvas account
	 */
	@AutoEscape
	public String getTimeZone();

	/**
	 * Sets the time zone of this canvas account.
	 *
	 * @param timeZone the time zone of this canvas account
	 */
	public void setTimeZone(String timeZone);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(CanvasAccount canvasAccount);

	@Override
	public int hashCode();

	@Override
	public CacheModel<CanvasAccount> toCacheModel();

	@Override
	public CanvasAccount toEscapedModel();

	@Override
	public CanvasAccount toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}